# Konfigurace perlového parseru Dana Zemana - pou¾ijí se hodnoty uvedené a¾
# jako poslední!

# Spoleèná nastavení doma i na fakultì.

# Parametry ladìní.
debug = 2
dbg_prah_uspesnosti = 1
dbganal = analyza-debug.csts
dbglog = analyza.log

###############################################################################
# Parametry tréninku i testu (pøi zmìnì nutno pøetrénovat!)
###############################################################################
# Seznam s-znaèek, které se nesmí ve vìtì vyskytnout, jinak bude vynechána.
# Znaèky jsou oddìleny svislítkem, napø. ExD|Coord|Apos. Nemá-li být vynechána
# ¾ádná vìta, vynech = 0.
#vynech = ExD|Coord|Apos
#vynech = ExD
vynech = 0
# Tzv. pseudovalence ano nebo ne? (0 nebo 1)
# Jde o to, ¾e slovesùm se sèítá jejich èistì znaèková a heslová prst.
pseudoval = 1
# Pøekroutit slo¾ené pøedlo¾ky, aby visely podle mì, ne podle PDT? (0 nebo 1)
nevlastni_predlozky = 1
# Upravovat morfologické znaèky? (Závislé na konkrétním jazyku a sadì znaèek.)
# 0 = ¾ádné zmìny znaèek
# 1 = zmìny pøibli¾nì jako v Baltimoru
# 2 = zmìny pøibli¾nì jako u Collinse
upravovat_mzn = 2
# Provádìt tzv. selektivní lexikalizaci m-znaèek? (0 nebo 1)
# Pokud ano, pøidá se napøíklad do znaèky pro pøedlo¾ku lemma pøedlo¾ky.
# Pozor, selex=1 nefunguje, jestli¾e upravovat_mzn!=2.
selex = 1
# Selektivní lexikalizace ka¾dého slovního druhu zvlá¹». Pokud je selex=0,
# k tìmto hodnotám u¾ se nepøihlí¾í.
# Svým zpùsobem by sem patøilo i vý¹e uvedené pseudoval jako selex_slovesa.
selex_predlozky = 1
selex_podradici_spojky = 1
selex_zajmena = 1
selex_prislovce_100 = 1
selex_byt = 1
# Parametrizovat pravdìpodobnost závislosti otázkou, zda na navrhovaném rodièi
# u¾ visí jiný uzel se stejnou znaèkou jako navrhované dítì? Pøi trénování se
# u ka¾dého uzlu zji¹»uje, zda má alespoò jednoho takového sourozence, a pokud
# ano, pøíznak se nastaví u obou. Není to sice pravdìpodobnostnì korektní, proto¾e
# pøi analýze bude odpovìï kladná jen u jednoho z obou sourozencù, ale nemá smysl
# implementovat to peèlivìji, proto¾e výsledný efekt je stejnì negativní.
zarlivost = 0
# Druh zdroje morfologických znaèek: MM, MD nebo prázdný øetìzec (= ruènì).
# Poznámka: pøetrénování není nezbytné, ale vhodné.
mzdroj0 = MD
# Zdroj morfologických znaèek: atribut src (napø. <MDt src="a">)
# Poznámka: pøetrénování není nezbytné, ale vhodné.
mzdroj1 = a
# Rozsekávat øetìzce znaèek na jednotlivé alternativy? (napø. N1|N4|N5 se postupnì vyzkou¹í jako N1, N4 i N5)
morfologicke_alternativy = 0
# Odli¹ovat koordinace od pravých závislostí?
koordinace = 1
# Brát v úvahu vzdálenost?
# vzdalenost = 0 ... vzdálenost se nezohledòuje v ¾ádné podobì
# vzdalenost = 2 ... parametrem pro váhu závislosti je soused/nesoused
# vzdalenost = 3 ... parametrem pro váhu závislosti je soused/nesoused/èárka
vzdalenost = 3
# vzdalenost_delitel = 1 ... nezávislé na vý¹e uvedených: váha závislosti se dìlí vzdáleností
vzdalenost_delitel = 1
# Závislosti na koøeni nerozli¹ují smìr, ale zato kontrolují pøítomnost slovesa ve
# vìtì. Pozor, pøi zmìnì tohoto pøepínaèe se musí pøetrénovat!
pod_korenem_sloveso_misto_smeru = 1
# Technický problém s velikostí pamìti: rozdìlit trénovací data do úsekù o
# ní¾e uvedeném poètu zji¹tìných událostí.
#split = 300000



###############################################################################
# Parametry testu (pøi zmìnì není nutno pøetrénovat).
###############################################################################
# Zpùsob budování stromu: zakázat (0) neprojektivity, nebo je v omezené míøe
# povolit (1)?
neproj = 1
# Zpùsob budování stromu (komponentovì, nebo shora dolù). Shora dolù lze pou¾ít
# pouze pøi neproj = 0, neprojektivity jsou v nìm v¹ak povoleny libovolnì.
#!!! Pozor, komponentove=0 momentálnì (20.7.2004) zpùsobí zacyklení výpoètu!
komponentove = 1
# Zpùsob výbìru závislého uzlu, který má být na øadì.
vyberzav = relativni-cetnost
# Zpùsob ohodnocení závislosti (absolutní èetnost (1), nebo relativní vzhledem
# k poètu výskytù závislého uzlu (0)?)
abscetnost = 0
# Druh pravdìpodobnostního modelu.
model = ls*slova+lz*znacky
# Váha modelu závislostí slov v kombinovaném modelu slova+znaèky.
ls = 0.734375
#ls = 1
# Upøednostòovat valenèní závislosti?
valence = 0
# Kontrolovat po sestavení prvního návrhu stromu, zda jsou naplnìné valenèní rámce?
valence1 = 0
# Omezení poètu návratù pøi hledání lep¹ího naplnìní valenèních rámcù.
valence1_maxnavratu = 100
# Omezení poètu generovaných stavù pøi hledání lep¹ího naplnìní valenèních rámcù.
valence1_maxgenstav = 50000
# Uplatnit zvlá¹tní zacházení na vzta¾né vedlej¹í vìty?
vztaz = 1
# Povolit lokální konflikty (koordinace)?
lokon = 1
# Kromì celkové úspì¹nosti sledovat zvlá¹» úspì¹nost na následujících
# závislostech (syntaktické znaèky oddìlené svislítky).
testafun = Sb|Obj|AuxT|Pnom|Adv
# Zakázat pøeskakování bezdìtných pøedlo¾ek?
predlozky = 1
# Násobit pravdìpodobnost závislosti pravdìpodobností, ¾e øídící uzel není
# koordinaèní spojkou? (Stejnì, jako se u¾ teï násobí pravdìpodobnost
# koordinace pravdìpodobností, ¾e øídící uzel je koordinaèní spojkou.)
# (a1 / a0 je zkratka pro tuto volbu v zaznam.txt)
nekoord = 1
# Zakázat pøeskakování podstatných jmen v genitivu?
# Poznámka: pùvodnì to pomáhalo, ale pøi závìreèném mìøení modelu 2 bylo lep¹í to vypnout.
nepreskocg = 0
# Zakázat pøeskakování urèitých slovesných tvarù urèitými závislostmi?
nepreskocv = 1
nepreskocv_cesta = zakazy_preskoceni.txt
# Modelovat plodnost?
# plodnost=1 ... plodnost bude zohlednìna
# plodnost=0 ... plodnost nebude zohlednìna
plodnost = 0
# Jakým zpùsobem zohlednit plodnost? (Funguje pouze pokud plodnost=1.)
# plodnost_model=ffm ... události ZPL z centrální statistiky
# plodnost_model=tfm ... jen výbìr v plodnost.txt, 0-0.5-1
# plodnost_model=qfm ... jen výbìr v plodnost.txt, 0-1
plodnost_model = qfm
# Zpracovat krátké vìty zvlá¹tním zpùsobem?
# krvety = 1 ... ano
# krvety = 0 ... ne, ale pøi trénování se potøebné statistiky stejnì sbírají
krvety = 1
# Vyhodnocovat morfologické vzory pro n-tice, které mají v 90% stejnou strukturu?
# ntice = 1 ... ano, statistiky musejí být k dispozici ve zvlá¹tních souborech
# ntice = 0 ... ne
ntice = 1
# PEVNÁ OMEZENÍ, KTERÁ NEMAJÍ NIC SPOLEÈNÉHO SE STATISTIKOU
# Zavì¹ovat koncovou interpunkci povinnì pod koøen?
koncint = 1
# Má být poèet dìtí koøene omezen na 2?
koren_2_deti = 1
# Má se hlídat, aby z úseku mezi dvìma èárkami nevedla ¾ádná závislost ven, dokud
# nejsou v¹echny uzly a¾ na jeden zavì¹eny v podstromu toho jednoho nezavì¹eného?
mezicarkove_useky = 1
# Vy¾adovat, aby èárky byly listy, tj. aby zùstaly bezdìtné?
carka_je_list = 1



###############################################################################
# Názvy souborù, konfigurace výstupù.
###############################################################################

# V tichém re¾imu se nic neposílá na standardní výstup, v¹e jen do souborù.
ticho = 0

# Pracovní slo¾ka pro ukládání statistik, èásteènì zpracovaných dat aj.
prac = pracovni

# Název souboru se statistikou událostí (train.pl do nìj pí¹e, parse.pl ète).
# Pokud je prázdný, parse.pl vybere v pracovní slo¾ce soubor s nejvy¹¹ím
# èíslem a pøíponou ".stat".
stat = 536.stat
# Pøípadná druhá statistika pro porovnání zmìn v úspì¹nosti.
stat1 =

# Název souboru s výstupem analýzy (analyzovaným textem ve formátu CSTS).
analyza = analyza.csts

# Název souboru, kam se mají pøi porovnávání vypsat rozdílné vìty.
rozdil = rozdil.csts

# Název souboru se seznamem vazeb (rámcù) sloves.
subcat = ../valence/seznam_ramcu.txt

# Cesty k trénovacím a testovacím datùm.
train = /home/zeman/data/pdt/trainmm/*.csts
test = /home/zeman/data/pdt/testmm/*.csts
#test = /home/zeman/data/pdt/etest/*.a
#test = ../PDT/testmm/*.csts
#train = /home/zeman/data/pdt/0.5/training/*.csts
#test = /home/zeman/data/pdt/0.5/dtest/*.csts
#test = /home/zeman/data/pdt/0.5/etest/*.csts
